name: TGC CI

on:
  push:
    branches:
      - main
    paths:
      - "frontend/**"
      - "backend/**"
    tags:
      - "v*"
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - main
    paths:
      - "frontend/**"
      - "backend/**"

jobs:
  testFrontend:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' || (github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v') && contains(github.event.commits[0].added, 'frontend/'))) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tests on frontend
        run: cd frontend && npm i && npm test

  testBackend:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' || (github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v') && contains(github.event.commits[0].added, 'backend/'))) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tests on backend
        run: cd backend && npm i && npm test

  dockerFrontendProd:
    needs: testFrontend
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_FRONTEND_REPO }}

      - name: Tag or Sha
        uses: haya14busa/action-cond@v1
        id: tag_sha
        with:
          cond: ${{ endsWith(steps.meta.outputs.tags, ':main') }}
          if_true: "${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_FRONTEND_REPO }}:${{github.sha}}"
          if_false: ${{ steps.meta.outputs.tags }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          target: prod
          platforms: linux/amd64
          push: true
          tags: ${{ steps.tag_sha.outputs.value }}

  dockerBackendProd:
    needs: testBackend
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_BACKEND_REPO }}

      - name: Tag or Sha
        uses: haya14busa/action-cond@v1
        id: tag_sha
        with:
          cond: ${{ endsWith(steps.meta.outputs.tags, ':main') }}
          if_true: "${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_BACKEND_REPO }}:${{github.sha}}"
          if_false: ${{ steps.meta.outputs.tags }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          target: prod
          platforms: linux/amd64
          push: true
          tags: ${{ steps.tag_sha.outputs.value }}
