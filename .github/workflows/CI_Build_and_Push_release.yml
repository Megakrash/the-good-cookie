name: Build and Push Docker Images for Release

on:
  create:

permissions:
  contents: write
  issues: write

jobs:
  setup-version:
    runs-on: ubuntu-latest
    if: github.event_name == 'create' && github.ref_type == 'branch' && github.ref == 'refs/heads/release'
    outputs:
      new-tag: ${{ steps.version.outputs.new-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch tags
        run: git fetch --tags
      - name: Determine new version
        id: version
        run: |
          # Get the latest tag that matches 'v*'
          LATEST_TAG=$(git tag --list 'v*' --sort=-v:refname | head -n 1)
          if [[ -z "$LATEST_TAG" ]]; then
            LATEST_TAG="v0.0.0"
          fi
          echo "Latest tag is $LATEST_TAG"
          # Increment the patch version. Assumes tags are in 'v0.0.0' format
          NEW_TAG=$(echo $LATEST_TAG | awk -F. '{OFS="."; $3+=1; print}')
          echo "New tag will be $NEW_TAG"
          echo "::set-output name=new-tag::$NEW_TAG"

  build-push-images:
    needs: setup-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image for frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_RELEASE_FRONTEND_REPO }}:${{ needs.setup-version.outputs.new-tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_RELEASE_FRONTEND_REPO }}:latest
          build-args: |
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
            NEXT_PUBLIC_MIDDLEWARE_URL=${{ secrets.NEXT_PUBLIC_MIDDLEWARE_URL }}
            NEXT_PUBLIC_PATH_IMAGE=${{ secrets.NEXT_PUBLIC_PATH_IMAGE }}
            NEXT_PUBLIC_RECAPTCHA_SITE_KEY=${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}
            NEXT_PUBLIC_RELEASE_TAG=${{ needs.setup-version.outputs.new-tag }}
      - name: Build and push Docker image for backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_RELEASE_BACKEND_REPO }}:${{ needs.setup-version.outputs.new-tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_RELEASE_BACKEND_REPO }}:latest
      - name: Push new Git tag
        run: |
          git config --global user.email ${{ secrets.MY_GITHUB_EMAIL }}
          git config --global user.name ${{ secrets.MY_GITHUB_NICKNAME }}
          git tag ${{ needs.setup-version.outputs.new-tag }}
          git push origin ${{ needs.setup-version.outputs.new-tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
